% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_peptide_data.R
\name{merge_proteingroups_by_gene}
\alias{merge_proteingroups_by_gene}
\title{Merge protein identifiers that map to the same unique set of gene symbols}
\usage{
merge_proteingroups_by_gene(dataset)
}
\arguments{
\item{dataset}{a valid dataset. Prior to calling this function, you must import protein metadata from FASTA using the \code{import_fasta()} function}
}
\description{
Suppose there are 3 proteingroups that have the respective unique genes:
\enumerate{
\item GRIA2
\item GRIA2
\item GRIA2;GRIA1
}

Then the latter proteingroup is an ambiguous proteingroup where respective peptides were matched to 2 genes
(by the upstream software that generated the dataset that you imported with e.g. \code{import_dataset_diann()}).
This function will merge all peptides that belong to proteingroups 1 and 2 into
one new proteingroup (that uniquely maps to GRIA2).
Proteingroup 3 will remain a distinct proteingroup; only proteingroups with the exact same
gene symbol set are matched (technical detail: this uses the definitions in \code{dataset$proteins$gene_symbols_or_id}).

This function will fully update the dataset's protein table and the protein_id column in the peptide table.

In most use-cases, this function should be used immediately after \code{import_fasta()} as shown in the example.
}
\examples{
\dontrun{
# example for using this function. You'll need to update the file paths accordingly
library(msdap)
dataset = import_dataset_diann("C:/data/diann_report.tsv")
dataset = import_fasta(dataset, files = "C:/data/uniprot_human_2020-01.fasta")
dataset = merge_proteingroups_by_gene(dataset)
}
}
