% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_peptide_data.R
\name{remove_proteins_by_name}
\alias{remove_proteins_by_name}
\title{Remove all peptides that match some protein-level filters}
\usage{
remove_proteins_by_name(
  dataset,
  remove_irt_peptides = FALSE,
  regular_expression = "",
  gene_symbols = c(),
  print_nchar_limit = 150
)
}
\arguments{
\item{dataset}{the dataset to filter}

\item{remove_irt_peptides}{try to find the irt spike-in peptides in the fasta file header. looking for; |IRT| and IRT_KIT and "Biognosys iRT" (case insensitive). default:FALSE}

\item{regular_expression}{careful here, regular expressions are powerful but complex matching patterns. A 'regex' that is matched against the fasta header(s) of a protein(group). case insensitive}

\item{gene_symbols}{an array of gene symbols that are to be matched against the fasta header(s) of a protein(group). case insensitive}

\item{print_nchar_limit}{max number of characters for the fasta headers (of removed proteins) that are shown in the log}
}
\description{
Remove all peptides that match some protein-level filters
}
\examples{
# remove all gene symbols that start with krt (eg; keratins)
\dontrun{gene_symbols = "krt"}
#remove keratins and IGGs using regular expression against uniprot fasta headers
#(particularly useful for IP experiments);
\dontrun{regular_expression = "ig \\\\S+ chain|keratin|GN=(krt|try|igk|igg|igkv|ighv|ighg)"}

}
